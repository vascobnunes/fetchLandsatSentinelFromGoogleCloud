# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Tests

on:
  push:
  pull_request:
    branches: [ master ]

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 3.8
      uses: actions/setup-python@v2
      with:
        python-version: 3.8
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install flake8
    - name: Lint with flake8
      run: |
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics

  build_and_test_sdist:
    name: Test Wheel Python 3.8
    runs-on: ubuntu-latest
    #needs: [lint]
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 3.8
      uses: actions/setup-python@v2
      with:
        python-version: 3.8
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip wheel
        python -m pip install -r requirements/build.txt
        python -m pip install -r requirements/tests.txt
    - name: Build Wheel
      run: |
        python setup.py bdist_wheel
    - name: Install Wheel
      run: |
        cd dist
        ls -al
        pip install FeLS*.whl -v
    - name: Test Installed Wheel
      run: |
        pwd
        ls -al
        mkdir -p tmpdir
        cd tmpdir
        #xdoctest -m fels
        FELS_INSTALL_DIR=$(python -c "import fels, os; print(os.path.dirname(fels.__file__))")
        echo "FELS_INSTALL_DIR = $FELS_INSTALL_DIR"
        pytest -s --verbose --xdoctest --cov-report term --cov=fels ../tests $FELS_INSTALL_DIR

    - name: Upload Wheel artifact
      uses: actions/upload-artifact@v2
      with:
        name: wheels
        path: ./dist/*.whl

  build_and_test_with_conda:
    name: Test ${{ matrix.python-version }} on ${{ matrix.os }}, arch=${{ matrix.arch }}
    runs-on: ${{ matrix.os }}
    #needs: [lint]
    strategy:
      matrix:
        os: [windows-latest, macOS-latest]
        python-version: 
          - '3.8'
        arch: [auto]

    steps:
    - name: Checkout source
      uses: actions/checkout@v2

    - uses: conda-incubator/setup-miniconda@v2
      with:
        auto-update-conda: true
        python-version: ${{ matrix.python-version }}
        activate-environment: fels_ci
        channels: conda-forge,defaults

    - name: Conda info
      shell: bash -l {0}
      run: conda info

    - name: Install dependencies
      shell: bash -l {0}
      run: |
        # Handle binary libs with conda
        conda install gdal fiona geopandas shapely
        # Use pip for the rest
        python -m pip install --upgrade pip wheel
        python -m pip install -r requirements/build.txt
        python -m pip install -r requirements/tests.txt

    - name: Build Wheel
      shell: bash -l {0}
      run: |
        python setup.py bdist_wheel

    - name: Install Wheel
      shell: bash -l {0}
      run: |
        cd dist
        ls -al
        pip install FeLS*.whl -v

    - name: Test Installed Wheel
      shell: bash -l {0}
      run: |
        pwd
        ls -al
        mkdir -p tmpdir
        cd tmpdir
        #xdoctest -m fels
        FELS_INSTALL_DIR=$(python -c "import fels, os; print(os.path.dirname(fels.__file__))")
        echo "FELS_INSTALL_DIR = $FELS_INSTALL_DIR"
        pytest -s --verbose --xdoctest --cov-report term --cov=fels ../tests $FELS_INSTALL_DIR
